[{"C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\index.js":"1","C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\App.js":"3"},{"size":517,"mtime":1631286590651,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1631286590655,"results":"6","hashOfConfig":"5"},{"size":6649,"mtime":1631499948176,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1ymscg5",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\index.js",[],["16","17"],"C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\scui\\Documents\\GitHub\\metal-price-frontend\\src\\App.js",["18","19","20"],"import React from 'react';\r\nimport './App.css';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Axios from 'axios';\r\nimport exportFromJSON from 'export-from-json' ;\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n\r\n\r\nconst divStyle = {\r\n  position: 'relative',\r\n  height: '40vh',\r\n  width: '20vw'\r\n};\r\n\r\n\r\nfunction npointsMA(n, price){\r\n  let n_points = n * 24 * 60; \r\n  let init_sum = 0;\r\n\r\n  for (var i = 0; i < n_points; i++){\r\n    init_sum += price[i];\r\n}\r\n\r\n  const movemean = [];\r\n\r\n  for (var i = 0; i < n_points-1; i++){\r\n    movemean.push(null);\r\n  }\r\n\r\n  for (var i = n_points-1; i < price.length; i++){\r\n      movemean.push(init_sum/n_points)\r\n      init_sum -= price[i - n_points + 1]\r\n      init_sum += price[i + 1]\r\n  }\r\n  return movemean\r\n}\r\n\r\n\r\n//5 10 20 60 120 144 250 \r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      year: '',\r\n      from_dtime: '',\r\n      to_dtime: '',\r\n      isLoaded: false,\r\n      query_data: [],\r\n      date: [],\r\n      price: [],\r\n      graph: '',\r\n      showdownload: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handledwnload = this.handledwnload.bind(this);\r\n    this.Dwnloadbtn = this.Dwnloadbtn.bind(this);\r\n  }\r\n\r\n//handle change\r\n\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]:event.target.value});\r\n    }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    Axios({\r\n      method: 'post',\r\n      url: 'https://metal-price-backend.herokuapp.com/silver',\r\n      //headers: {\"Content-Type\": \"application/json\"},\r\n      data: {\r\n        year: this.state.year,\r\n        from_dtime: this.state.from_dtime,\r\n        to_dtime: this.state.to_dtime,\r\n      }}).then((res) => {\r\n        console.log(\"here\");\r\n        this.setState({\r\n          isLoaded: true,\r\n          query_data: res.data\r\n        })\r\n\r\n        var x = [];\r\n        var y = [];\r\n\r\n        for (var i in this.state.query_data){\r\n          x.push(this.state.query_data[i].dtime);\r\n          y.push(this.state.query_data[i].price);\r\n        }\r\n\r\n        this.setState({\r\n          date: x,\r\n          price: y\r\n        })\r\n\r\n        const data = {\r\n          labels: this.state.date,\r\n          datasets: [{\r\n            label: \"Silver price\",\r\n            data: this.state.price,\r\n            radius: 0,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1,\r\n            fill: true,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\r\n          },\r\n          {\r\n            label: \"5 day average\",\r\n            data: npointsMA(5,this.state.price),\r\n            radius: 0,\r\n            borderColor: 'rgba(255, 51, 51, 0.8)',\r\n            borderWidth: 1,\r\n            fill: false,\r\n            hidden: true\r\n          },\r\n          {\r\n            label: \"20 day average\",\r\n            data: npointsMA(20,this.state.price),\r\n            radius: 0,\r\n            borderColor: 'rgba(0, 128, 255, 0.8)',\r\n            borderWidth: 1,\r\n            fill: false,\r\n            hidden: true\r\n          },\r\n          {\r\n            label: \"60 day average\",\r\n            data: npointsMA(60,this.state.price),\r\n            radius: 0,\r\n            borderColor: 'rgba(0, 128, 255, 0.8)',\r\n            borderWidth: 1,\r\n            fill: false,\r\n            hidden: true\r\n          },\r\n          {\r\n            label: \"144 day average\",\r\n            data: npointsMA(144,this.state.price),\r\n            radius: 0,\r\n            borderColor: 'rgba(0, 128, 255, 0.8)',\r\n            borderWidth: 1,\r\n            fill: false,\r\n            hidden: true\r\n          }\r\n        ]\r\n        };\r\n\r\n        const options = {\r\n          scales: {\r\n            xAxes: [{\r\n              ticks: {\r\n                maxTicksLimit: 30\r\n              }\r\n            }]\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio:false,\r\n          layout: {\r\n            padding: {\r\n              top: 10,\r\n              left: 80,\r\n              right: 5,\r\n              bottom: 15\r\n            }\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          graph: <div className=\"linechart\">\r\n                  <Line \r\n                    data = {data}\r\n                    options= {options}\r\n                    />\r\n                  </div>\r\n        });\r\n\r\n        this.setState({\r\n          showdownload: <button onClick={this.handledwnload}> Download </button>\r\n        })\r\n\r\n\r\n      });\r\n      event.preventDefault();\r\n    }\r\n\r\n    handledwnload(event) {\r\n      const data = this.state.query_data;\r\n      const filename = `silver_price_${this.state.from_dtime}-${this.state.to_dtime}`;\r\n      const exportType = 'csv'\r\n      exportFromJSON({data, filename, exportType});\r\n    }\r\n\r\n    Dwnloadbtn(){\r\n      /*\r\n      if (this.state.showdownload){\r\n        return (<button onClick={this.handledwnload}> Download </button>);\r\n      }\r\n      else{\r\n        return (<div> </div>);\r\n      }\r\n      */\r\n      //return <button onClick={this.handledwnload}> Download </button>;\r\n      return <Button onClick={this.handledwnload} variant='outline-dark'>Download</Button>;\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div class=\"flexbox-container\">\r\n        <Form onSubmit = {this.handleSubmit} className = 'settings'>\r\n          <Form.Group className=\"mb-3\" >\r\n            <Form.Label>Year</Form.Label>\r\n              <Form.Control \r\n                name=\"year\" type=\"number\" placeholder=\"YYYY\"               \r\n                value={this.state.year}\r\n                onChange={this.handleChange}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>From Date</Form.Label>\r\n              <Form.Control \r\n                name=\"from_dtime\" type=\"text\" placeholder=\"YYYY-MM-DD\"               \r\n                value={this.state.from_dtime}\r\n                onChange={this.handleChange.bind(this)}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>To Date</Form.Label>\r\n              <Form.Control \r\n                name=\"to_dtime\"type=\"text\" placeholder=\"YYYY-MM-DD\"               \r\n                value={this.state.to_dtime}\r\n                onChange={this.handleChange.bind(this)}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        {this.state.graph}\r\n        <div>\r\n        {this.state.showdownload}\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      \r\n      </>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":13,"column":7,"nodeType":"27","messageId":"28","endLine":13,"endColumn":15},{"ruleId":"29","severity":1,"message":"30","line":30,"column":12,"nodeType":"27","messageId":"31","endLine":30,"endColumn":13},{"ruleId":"29","severity":1,"message":"30","line":34,"column":12,"nodeType":"27","messageId":"31","endLine":34,"endColumn":13},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'divStyle' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]