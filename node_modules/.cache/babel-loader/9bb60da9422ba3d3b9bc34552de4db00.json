{"ast":null,"code":"var _jsxFileName = \"/Users/xuanmingcui/Documents/prof_chens/metal_price_demo/frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Axios from 'axios';\nimport exportFromJSON from 'export-from-json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  position: 'relative',\n  height: '40vh',\n  width: '20vw'\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: '',\n      end: '',\n      isLoaded: false,\n      query_data: [],\n      date: [],\n      price: [],\n      graph: '',\n      showdownload: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handledwnload = this.handledwnload.bind(this);\n    this.Dwnloadbtn = this.Dwnloadbtn.bind(this);\n  } //handle change\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"there\");\n    Axios({\n      method: 'post',\n      url: 'http://localhost:3000',\n      //headers: {\"Content-Type\": \"application/json\"},\n      data: {\n        start: this.state.start,\n        end: this.state.end\n      }\n    }).then(res => {\n      console.log(\"here\");\n      this.setState({\n        isLoaded: true,\n        query_data: res.data\n      });\n      var x = [];\n      var y = [];\n\n      for (var i in this.state.query_data) {\n        x.push(this.state.query_data[i].datetime);\n        y.push(this.state.query_data[i].price);\n      }\n\n      this.setState({\n        date: x,\n        price: y\n      });\n      const data = {\n        labels: this.state.date,\n        datasets: [{\n          label: \"Silver price chart\",\n          data: this.state.price\n        }]\n      };\n      const options = {\n        scales: {\n          xAxes: [{\n            ticks: {\n              maxTicksLimit: 30\n            }\n          }]\n        }\n      };\n      this.setState({\n        graph: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: data,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 18\n        }, this)\n      });\n      this.setState({\n        showdownload: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handledwnload,\n          children: \" Download \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      });\n    });\n    event.preventDefault();\n  }\n\n  handledwnload(event) {\n    const data = this.state.query_data;\n    const filename = `silver_price_${this.state.start}-${this.state.end}`;\n    const exportType = 'csv';\n    exportFromJSON({\n      data,\n      filename,\n      exportType\n    });\n  }\n\n  Dwnloadbtn() {\n    /*\n    if (this.state.showdownload){\n      return (<button onClick={this.handledwnload}> Download </button>);\n    }\n    else{\n      return (<div> </div>);\n    }\n    */\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handledwnload,\n      children: \" Download \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"start:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"start\",\n              type: \"text\",\n              value: this.state.start,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"end:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"end\",\n              type: \"text\",\n              value: this.state.end,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), this.state.graph, this.state.showdownload]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/xuanmingcui/Documents/prof_chens/metal_price_demo/frontend/src/App.js"],"names":["React","useState","Line","Axios","exportFromJSON","divStyle","position","height","width","App","Component","constructor","props","state","start","end","isLoaded","query_data","date","price","graph","showdownload","handleChange","bind","handleSubmit","handledwnload","Dwnloadbtn","event","setState","target","name","value","console","log","method","url","data","then","res","x","y","i","push","datetime","labels","datasets","label","options","scales","xAxes","ticks","maxTicksLimit","preventDefault","filename","exportType","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport Axios from 'axios';\nimport exportFromJSON from 'export-from-json' ;\n\n\n\nconst divStyle = {\n  position: 'relative',\n  height: '40vh',\n  width: '20vw'\n};\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: '',\n      end: '',\n      isLoaded: false,\n      query_data: [],\n      date: [],\n      price: [],\n      graph: '',\n      showdownload: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handledwnload = this.handledwnload.bind(this);\n    this.Dwnloadbtn = this.Dwnloadbtn.bind(this);\n  }\n\n//handle change\n\n\n  handleChange(event) {\n    this.setState({[event.target.name]:event.target.value});\n    }\n\n  handleSubmit(event) {\n    console.log(\"there\");\n    Axios({\n      method: 'post',\n      url: 'http://localhost:3000',\n      //headers: {\"Content-Type\": \"application/json\"},\n      data: {\n        start: this.state.start,\n        end: this.state.end\n      }}).then((res) => {\n        console.log(\"here\");\n        this.setState({\n          isLoaded: true,\n          query_data: res.data\n        })\n\n\n        var x = [];\n        var y = [];\n\n        for (var i in this.state.query_data){\n          x.push(this.state.query_data[i].datetime);\n          y.push(this.state.query_data[i].price);\n        }\n\n        this.setState({\n          date: x,\n          price: y\n        })\n\n        const data = {\n          labels: this.state.date,\n          datasets: [{\n            label: \"Silver price chart\",\n            data: this.state.price\n          }]\n        };\n\n        const options = {\n          scales: {\n            xAxes: [{\n              ticks: {\n                maxTicksLimit: 30\n              }\n            }]\n          }\n        }\n\n        this.setState({\n          graph: <div class=\"chart-container\">\n                  <Line\n                    data = {data}\n                    options= {options}\n                    />\n                  </div>\n        });\n\n        this.setState({\n          showdownload: <button onClick={this.handledwnload}> Download </button>\n        })\n\n\n      });\n      event.preventDefault();\n    }\n\n    handledwnload(event) {\n      const data = this.state.query_data;\n      const filename = `silver_price_${this.state.start}-${this.state.end}`;\n      const exportType = 'csv'\n      exportFromJSON({data, filename, exportType});\n    }\n\n    Dwnloadbtn(){\n      /*\n      if (this.state.showdownload){\n        return (<button onClick={this.handledwnload}> Download </button>);\n      }\n      else{\n        return (<div> </div>);\n      }\n      */\n      return <button onClick={this.handledwnload}> Download </button>;\n    }\n\n\n\n\n  render() {\n    return (\n      <>\n      <div>\n        <form onSubmit = {this.handleSubmit}>\n          <label>\n            start:\n            <input\n              name=\"start\"\n              type=\"text\"\n              value={this.state.start}\n              onChange={this.handleChange} />\n          </label>\n          <br />\n          <label>\n            end:\n            <input\n              name=\"end\"\n              type=\"text\"\n              value={this.state.end}\n              onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n\n      {this.state.graph}\n      {this.state.showdownload}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}