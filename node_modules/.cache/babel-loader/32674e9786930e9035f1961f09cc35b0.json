{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scui\\\\Documents\\\\GitHub\\\\metal-price-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Axios from 'axios';\nimport exportFromJSON from 'export-from-json';\nimport { graph } from './chart_config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  position: 'relative',\n  height: '40vh',\n  width: '20vw'\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: '',\n      from_dtime: '',\n      to_dtime: '',\n      isLoaded: false,\n      query_data: [],\n      date: [],\n      price: [],\n      graph: '',\n      showdownload: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handledwnload = this.handledwnload.bind(this);\n    this.Dwnloadbtn = this.Dwnloadbtn.bind(this);\n  } //handle change\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"there\");\n    Axios({\n      method: 'post',\n      url: 'http://127.0.0.1:8000/silver',\n      //headers: {\"Content-Type\": \"application/json\"},\n      data: {\n        year: this.state.year,\n        from_dtime: this.state.from_dtime,\n        to_dtime: this.state.to_dtime\n      }\n    }).then(res => {\n      console.log(\"here\");\n      this.setState({\n        isLoaded: true,\n        query_data: res.data\n      });\n      var x = [];\n      var y = [];\n\n      for (var i in this.state.query_data) {\n        x.push(this.state.query_data[i].dtime);\n        y.push(this.state.query_data[i].price);\n      }\n\n      this.setState({\n        date: x,\n        price: y\n      });\n      const data = {\n        labels: this.state.date,\n        datasets: [{\n          label: \"Silver price chart\",\n          data: this.state.price,\n          radius: 0,\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }]\n      };\n      const options = {\n        scales: {\n          xAxes: [{\n            ticks: {\n              maxTicksLimit: 30\n            }\n          }]\n        }\n      };\n      this.setState({\n        graph: graph\n      });\n      this.setState({\n        showdownload: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handledwnload,\n          children: \" Download \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      });\n    });\n    event.preventDefault();\n  }\n\n  handledwnload(event) {\n    const data = this.state.query_data;\n    const filename = `silver_price_${this.state.start}-${this.state.end}`;\n    const exportType = 'csv';\n    exportFromJSON({\n      data,\n      filename,\n      exportType\n    });\n  }\n\n  Dwnloadbtn() {\n    /*\r\n    if (this.state.showdownload){\r\n      return (<button onClick={this.handledwnload}> Download </button>);\r\n    }\r\n    else{\r\n      return (<div> </div>);\r\n    }\r\n    */\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handledwnload,\n      children: \" Download \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"start:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"year\",\n              type: \"text\",\n              value: this.state.year,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"start:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"from_dtime\",\n              type: \"text\",\n              value: this.state.from_dtime,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"end:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"to_dtime\",\n              type: \"text\",\n              value: this.state.to_dtime,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), this.state.graph, this.state.showdownload]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/scui/Documents/GitHub/metal-price-frontend/src/App.js"],"names":["React","useState","Line","Axios","exportFromJSON","graph","divStyle","position","height","width","App","Component","constructor","props","state","year","from_dtime","to_dtime","isLoaded","query_data","date","price","showdownload","handleChange","bind","handleSubmit","handledwnload","Dwnloadbtn","event","setState","target","name","value","console","log","method","url","data","then","res","x","y","i","push","dtime","labels","datasets","label","radius","borderColor","borderWidth","options","scales","xAxes","ticks","maxTicksLimit","preventDefault","filename","start","end","exportType","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Axios from 'axios';\r\nimport exportFromJSON from 'export-from-json' ;\r\nimport {graph} from './chart_config'\r\n\r\n\r\n\r\nconst divStyle = {\r\n  position: 'relative',\r\n  height: '40vh',\r\n  width: '20vw'\r\n};\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      year: '',\r\n      from_dtime: '',\r\n      to_dtime: '',\r\n      isLoaded: false,\r\n      query_data: [],\r\n      date: [],\r\n      price: [],\r\n      graph: '',\r\n      showdownload: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handledwnload = this.handledwnload.bind(this);\r\n    this.Dwnloadbtn = this.Dwnloadbtn.bind(this);\r\n  }\r\n\r\n//handle change\r\n\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]:event.target.value});\r\n    }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"there\");\r\n    Axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:8000/silver',\r\n      //headers: {\"Content-Type\": \"application/json\"},\r\n      data: {\r\n        year: this.state.year,\r\n        from_dtime: this.state.from_dtime,\r\n        to_dtime: this.state.to_dtime,\r\n      }}).then((res) => {\r\n        console.log(\"here\");\r\n        this.setState({\r\n          isLoaded: true,\r\n          query_data: res.data\r\n        })\r\n\r\n\r\n        var x = [];\r\n        var y = [];\r\n\r\n        for (var i in this.state.query_data){\r\n          x.push(this.state.query_data[i].dtime);\r\n          y.push(this.state.query_data[i].price);\r\n        }\r\n\r\n        this.setState({\r\n          date: x,\r\n          price: y\r\n        })\r\n\r\n        const data = {\r\n          labels: this.state.date,\r\n          datasets: [{\r\n            label: \"Silver price chart\",\r\n            data: this.state.price,\r\n            radius: 0,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        };\r\n\r\n        const options = {\r\n          scales: {\r\n            xAxes: [{\r\n              ticks: {\r\n                maxTicksLimit: 30\r\n              }\r\n            }]\r\n          }\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n          graph : graph\r\n        });\r\n\r\n        this.setState({\r\n          showdownload: <button onClick={this.handledwnload}> Download </button>\r\n        })\r\n\r\n\r\n      });\r\n      event.preventDefault();\r\n    }\r\n\r\n    handledwnload(event) {\r\n      const data = this.state.query_data;\r\n      const filename = `silver_price_${this.state.start}-${this.state.end}`;\r\n      const exportType = 'csv'\r\n      exportFromJSON({data, filename, exportType});\r\n    }\r\n\r\n    Dwnloadbtn(){\r\n      /*\r\n      if (this.state.showdownload){\r\n        return (<button onClick={this.handledwnload}> Download </button>);\r\n      }\r\n      else{\r\n        return (<div> </div>);\r\n      }\r\n      */\r\n      return <button onClick={this.handledwnload}> Download </button>;\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div>\r\n        <form onSubmit = {this.handleSubmit}>\r\n          <label>\r\n            start:\r\n            <input\r\n              name=\"year\"\r\n              type=\"text\"\r\n              value={this.state.year}\r\n              onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            start:\r\n            <input\r\n              name=\"from_dtime\"\r\n              type=\"text\"\r\n              value={this.state.from_dtime}\r\n              onChange={this.handleChange} />\r\n          </label>\r\n          <label>\r\n            end:\r\n            <input\r\n              name=\"to_dtime\"\r\n              type=\"text\"\r\n              value={this.state.to_dtime}\r\n              onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n\r\n      {this.state.graph}\r\n      {this.state.showdownload}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}